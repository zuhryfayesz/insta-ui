{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Applications/Noon-Project/insta-ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/Noon-Project/insta-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Applications/Noon-Project/insta-ui/pages/posts/favorited.js\",\n    _this = this;\n\nimport styles from '../../styles/Ninjas.module.css';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Import the FontAwesomeIcon component\n\nimport { faHeart, faSearch, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nvar triggerRemoveLike = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(post) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(post.post_like_count);\n            console.log(post.is_liked);\n            data = new URLSearchParams();\n            data.append('userName', 'test@gmail.com');\n            data.append('password', 'Password');\n            data.append('grant_type', 'password');\n            _context2.next = 8;\n            return fetch('https://thawing-wave-48739.herokuapp.com/insta-api/toggle-like', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: new URLSearchParams({\n                'id': post._id,\n                'status': post.is_liked == 1 ? 0 : 1,\n                'count': post.post_like_count\n              })\n            }).then( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.t0 = console;\n                        _context.next = 3;\n                        return response.text();\n\n                      case 3:\n                        _context.t1 = _context.sent;\n\n                        _context.t0.log.call(_context.t0, _context.t1);\n\n                        Router.reload('/posts/favorited');\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }())[\"catch\"](function (error) {\n              console.error('Error:', error);\n            });\n\n          case 8:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function triggerRemoveLike(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Favorited = function Favorited(_ref3) {\n  var posts = _ref3.posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts['messages'].map(function (post) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.single,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            styles: {\n              \"float\": 'left',\n              position: 'relative'\n            },\n            children: [post.post_title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                \"float\": 'right',\n                marginRight: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                onClick: function onClick() {\n                  return triggerRemoveLike(post);\n                },\n                color: post.is_liked == 0 ? '#bbc0c5' : '#fc619c',\n                style: {\n                  fontSize: '25px'\n                },\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 144\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 92\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, _this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Favorited;\nexport var __N_SSG = true;\nexport default Favorited;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorited\");","map":{"version":3,"sources":["/Applications/Noon-Project/insta-ui/pages/posts/favorited.js"],"names":["styles","Link","Router","FontAwesomeIcon","faHeart","faSearch","faTrash","triggerRemoveLike","post","console","log","post_like_count","is_liked","data","URLSearchParams","append","fetch","method","headers","body","_id","then","response","text","reload","error","Favorited","posts","map","single","position","post_title","marginRight","fontSize"],"mappings":"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","sourcesContent":["import styles from '../../styles/Ninjas.module.css'\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Import the FontAwesomeIcon component\nimport { faHeart, faSearch, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const getStaticProps = async () => {\n    const res = await fetch('https://thawing-wave-48739.herokuapp.com/insta-api/get-all-liked-posts')\n    const data = await res.json()\n\n    return {\n        props: { posts: data }\n    }\n}\n\nconst triggerRemoveLike = async(post) => {\n    console.log(post.post_like_count)\n    console.log(post.is_liked)\n\n    var data = new URLSearchParams();\n    data.append('userName', 'test@gmail.com');\n    data.append('password', 'Password');\n    data.append('grant_type', 'password');\n\n\n    return await fetch('https://thawing-wave-48739.herokuapp.com/insta-api/toggle-like', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            'id': post._id,\n            'status': post.is_liked == 1 ? 0 : 1,\n            'count': post.post_like_count\n          })\n    })\n        .then(async response => {\n            // return JSON.parse(await response.text());\n            console.log(await response.text() )\n            Router.reload('/posts/favorited');\n        })\n        .catch(error => {\n            console.error('Error:', error);\n    });\n}\n\nconst Favorited = ({ posts }) => {\n    return ( \n        <div>\n           {posts['messages'].map(post => (\n             <Link href='#' key={post._id}>\n                 <a className={styles.single}>\n                     <h3 styles={{ float: 'left', position: 'relative'}}>{post.post_title} <span style={{float: 'right', marginRight: '10px'}}><FontAwesomeIcon onClick={() => triggerRemoveLike(post)} color={post.is_liked == 0 ? '#bbc0c5' : '#fc619c'} style={{ fontSize: '25px' }} icon={faTrash}></FontAwesomeIcon></span></h3>\n                 </a>\n             </Link>  \n           ))}\n        </div>\n     );\n}\n \nexport default Favorited;"]},"metadata":{},"sourceType":"module"}